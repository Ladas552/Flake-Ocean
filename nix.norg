@document.meta
title: Nix
description: Notes on this Nix config
authors: ladas552
@end

I start to have a life other than computers so I kinda begin to forget what I did and didn't. So here we are, there will be notes, todos, plans and tips(mostly for myself)

* Notes
** Scripts
   I declare scripts with packages that allow to have them in nix format. It allows me to not hold dependencies for certain scripts, like `libnotify` for scripts that send notifications. There are several ways to do this, I prefer bash, but it isn't sufficient in certain places.

   I hold all of my scripts in {./scripts/}[scripts] folder

*** writeShellScriptBin
    The `pkgs.writeShellScriptBin` is used to put a complete bash script into /nix/store with a correct Shebang for it to work. This one is only for `bash` and provides `#!/usr/bin/env bash` shebang

    Example: {./scripts/word-lookup.nix}[Word look up script written in bash]

*** writers.writeFishBin
    `pkgs.writers.writeFishBin "musnow.sh" {}` is a way to write scripts in any language, this example is for `fish` shell, but `writers` can be in many forms, from python and lua to rust.
    The `{}` is set of options can also hold environmental variables.

    Example: {./scripts/musnow.nix}[To look up comment metadata of mpd track]

** Repository

** ZFS
   I use ZFS as a file system, it provides me with snapshots and compression via zstd. You can't install zfs in calimaries, so need to use nixos iso and configure drive with a {:./docs/zfs.norg:}[script], after that it is simple `nixos-install --flake "github:Ladas552/Nixos-Is-Unbreakable#Host` and setting up a root password at the end

   Zfs is controlled by a {./nixosModules/services/zfs.nix}[ZFS] module, that also houses my file system config, with a {:./docs/zfs.norg:}[script], they should all be the same, but would need adjustment, namely `/dev/sda` vs `/dev/nvme0n1p` stuff, but thous can be grabbed from Gparted that comes in NixIso
*** Passwords
    - root
      I still don't know how to setup passwords declarativly, so just setup root password right after installation in a terminal prompt.
    - user
      In NixOS, users are Mutual by default, so you can just `su` to change to root, and `passwd ladas552` to change password of user-Ladas552 when you can't login to the user.

* TODOs
** Notes
   - -To write comments in shell scripts-
   - To write comments to stuff like Sops-nix. I start to forget even how to set them up.

** Programs
   - *lf*. Configure custom commands and scripts. Use Pistol instead of XDG-open
   - *Nix-on-droid*. Add files like `termux-edit-open` and `termux.properties` into the declarative ways. UPDATE: Can't do that with `home.file` need to wait for update apparently
   - *Xremap* or *Keyd*. The button that I have on Acer, binded to Shift+WinL+A. I need to bind ti to PrintScreen

** Modulations

*** Sessions
    - I want to make wm independent variables for applications. So that I can have For example, 2 configured Launcher applications, but I only want one. Then I just change the variable, and every other module that uses variable `isLauncher` also follows. Basically to have a dozen of WM configs, but if I one day want to switch rofi for dmenu, keybinds would stay the same.
